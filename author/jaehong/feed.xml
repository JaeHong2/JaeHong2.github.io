<?xml version="1.0" encoding="utf-8"?>

<feed xmlns="http://www.w3.org/2005/Atom" >
  <generator uri="https://jekyllrb.com/" version="3.7.4">Jekyll</generator>
  <link href="https://jaehong2.github.io//author/jaehong/feed.xml" rel="self" type="application/atom+xml" />
  <link href="https://jaehong2.github.io//" rel="alternate" type="text/html" />
  <updated>2020-12-19T14:29:22+09:00</updated>
  <id>https://jaehong2.github.io//author/jaehong/feed.xml</id>

  
  
  

  
    <title type="html">오늘의 공부기록 | </title>
  

  
    <subtitle>모르면 -&gt; 알때까지 -&gt; 공부해서 -&gt; 해낸다.</subtitle>
  

  

  
    
      
    
  

  
  

  
    <entry>
      <title type="html">알파벳 찾기</title>
      <link href="https://jaehong2.github.io//beakjoon-10809" rel="alternate" type="text/html" title="알파벳 찾기" />
      <published>2020-12-18T23:02:00+09:00</published>
      <updated>2020-12-18T23:02:00+09:00</updated>
      <id>https://jaehong2.github.io//beakjoon-10809</id>
      <content type="html" xml:base="https://jaehong2.github.io//beakjoon-10809">&lt;!-- 10809 알파벳찾기--&gt;

&lt;h3&gt;문제&lt;/h3&gt;
&lt;p&gt;알파벳 소문자로만 이루어진 단어 S가 주어진다. 각각의 알파벳에 대해서, 단어에 포함되어 있는 경우에는 처음 등장하는 위치를, &lt;br /&gt;
포함되어 있지 않은 경우에는 -1을 출력하는 프로그램을 작성하시오.&lt;/p&gt;

&lt;h3&gt;입력&lt;/h3&gt;
&lt;p&gt;첫째 줄에 단어 S가 주어진다. 단어의 길이는 100을 넘지 않으며, 알파벳 소문자로만 이루어져 있다.&lt;/p&gt;

&lt;h3&gt;출력&lt;/h3&gt;
&lt;p&gt;각각의 알파벳에 대해서, a가 처음 등장하는 위치, b가 처음 등장하는 위치, … z가 처음 등장하는 위치를 공백으로 구분해서 출력한다.
만약, 어떤 알파벳이 단어에 포함되어 있지 않다면 -1을 출력한다. 단어의 첫 번째 글자는 0번째 위치이고, 두 번째 글자는 1번째 위치이다.&lt;/p&gt;

&lt;h4&gt;예제입력1&lt;/h4&gt;
&lt;pre&gt;baekjoon&lt;/pre&gt;

&lt;h4&gt;예제 출력&lt;/h4&gt;
&lt;pre&gt;
1 0 -1 -1 2 -1 -1 -1 -1 4 3 -1 -1 7 5 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1
&lt;/pre&gt;

&lt;h4&gt;문제생각&lt;/h4&gt;
&lt;p&gt;a~z까지 입력값에 있으면 입력값에 대한 위치를 출력&lt;br /&gt;
0부터 시작, 입력한 문자중 없으면 -1&lt;br /&gt;
중복된 2번째 문자부터는 무시
&lt;/p&gt;

&lt;h4&gt;code&lt;/h4&gt;
&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;java.io.*&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Main&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[])&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IOException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

        &lt;span class=&quot;n&quot;&gt;BufferedReader&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;br&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BufferedReader&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;InputStreamReader&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;in&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;br&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;readLine&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;


        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;sc&quot;&gt;'a'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt;&lt;span class=&quot;sc&quot;&gt;'z'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//a~z까지&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;indexOf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)+&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot; &quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;c1&quot;&gt;// indexOf() :  특정 문자나 문자열이 앞에서부터 처음 발견되는 인덱스를 반환하며&lt;/span&gt;
            &lt;span class=&quot;c1&quot;&gt;//                  찾지 못하면 -1을 반환한다..&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1&gt;문제출처&lt;/h1&gt;
&lt;ul&gt;
    &lt;li&gt;&lt;a href=&quot;https://www.acmicpc.net/problem/&quot;&gt;백준알고리즘 https://www.acmicpc.net/problem/&amp;gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content>

      
      
      
      
      

      <author>
          <name>jaehong</name>
        
        
      </author>

      

      
        <category term="algorithm" />
      

      
        <summary type="html">문제 알파벳 소문자로만 이루어진 단어 S가 주어진다. 각각의 알파벳에 대해서, 단어에 포함되어 있는 경우에는 처음 등장하는 위치를, 포함되어 있지 않은 경우에는 -1을 출력하는 프로그램을 작성하시오. 입력 첫째 줄에 단어 S가 주어진다. 단어의 길이는 100을 넘지 않으며, 알파벳 소문자로만 이루어져 있다. 출력 각각의 알파벳에 대해서, a가 처음 등장하는 위치, b가 처음 등장하는 위치, … z가 처음 등장하는 위치를 공백으로 구분해서 출력한다. 만약, 어떤 알파벳이 단어에 포함되어 있지 않다면 -1을 출력한다. 단어의 첫 번째 글자는 0번째 위치이고, 두 번째 글자는 1번째 위치이다. 예제입력1 baekjoon 예제 출력 1 0 -1 -1 2 -1 -1 -1 -1 4 3 -1 -1 7 5 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 문제생각 a~z까지 입력값에 있으면 입력값에 대한 위치를 출력 0부터 시작, 입력한 문자중 없으면 -1 중복된 2번째 문자부터는 무시 code import java.io.*; public class Main { public static void main(String args[]) throws IOException{ BufferedReader br = new BufferedReader(new InputStreamReader(System.in)); String s = br.readLine(); for(char c='a';c&amp;lt;='z';c++) { //a~z까지 System.out.print(s.indexOf(c)+&quot; &quot;); // indexOf() : 특정 문자나 문자열이 앞에서부터 처음 발견되는 인덱스를 반환하며 // 찾지 못하면 -1을 반환한다.. } } } 문제출처 백준알고리즘 https://www.acmicpc.net/problem/&amp;gt;</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">uri-pattern</title>
      <link href="https://jaehong2.github.io//jsp-uri-pattern" rel="alternate" type="text/html" title="uri-pattern" />
      <published>2020-12-16T23:17:00+09:00</published>
      <updated>2020-12-16T23:17:00+09:00</updated>
      <id>https://jaehong2.github.io//jsp-uri-pattern</id>
      <content type="html" xml:base="https://jaehong2.github.io//jsp-uri-pattern">&lt;!-- uri - pattern FrontController 패턴, Command패턴 --&gt;

&lt;h4&gt;디렉터리 패턴&lt;/h4&gt;
&lt;p&gt;서블릿을 만들면 .xml or annotation을 이용해서 mapping 하는 방식을 공부했었는데&lt;br /&gt;
디렉터리 형태로 서버의 해당 컴포넌트(서블릿)을 찾아서 실행하는 구조를 디렉터리 패턴이라고 한다.&lt;br /&gt;
&lt;img src=&quot;/assets/built/images/jsp/jsp.18.JPG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h4&gt;확장자 패턴&lt;/h4&gt;
&lt;p&gt;확장자 형태로 서버의 해당 컴포넌트를 찾아서 실행하는 구조&lt;br /&gt;
&lt;img src=&quot;/assets/built/images/jsp/jsp.19.JPG&quot; alt=&quot;&quot; /&gt;
확장자 패턴은 두가지가있다.&lt;/p&gt;
&lt;ul&gt;
    &lt;li&gt;FrontController 패턴&lt;/li&gt;
    &lt;li&gt;Command 패턴&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h4&gt;FrontController&lt;/h4&gt;
&lt;p&gt;&lt;img src=&quot;/assets/built/images/jsp/jsp.16.JPG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
&lt;h4&gt;Command&lt;/h4&gt;
&lt;p&gt;&lt;img src=&quot;/assets/built/images/jsp/jsp.17.JPG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h1&gt;References.&lt;/h1&gt;
&lt;ul&gt;
    &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=Aw-lOlR0I28&amp;amp;list=PLOJ3X9PwqLzvyIx3mwuf-muEd5TUI-yph/&quot; target=&quot;_blank&quot; class=&quot;tx-link&quot;&gt;
        https://www.youtube.com/watch?v=Aw-lOlR0I28&amp;amp;list=PLOJ3X9PwqLzvyIx3mwuf-muEd5TUI-yph/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content>

      
      
      
      
      

      <author>
          <name>jaehong</name>
        
        
      </author>

      

      
        <category term="java" />
      

      
        <summary type="html">디렉터리 패턴 서블릿을 만들면 .xml or annotation을 이용해서 mapping 하는 방식을 공부했었는데 디렉터리 형태로 서버의 해당 컴포넌트(서블릿)을 찾아서 실행하는 구조를 디렉터리 패턴이라고 한다. 확장자 패턴 확장자 형태로 서버의 해당 컴포넌트를 찾아서 실행하는 구조 확장자 패턴은 두가지가있다. FrontController 패턴 Command 패턴 FrontController Command References. https://www.youtube.com/watch?v=Aw-lOlR0I28&amp;amp;list=PLOJ3X9PwqLzvyIx3mwuf-muEd5TUI-yph/</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">MVC 패턴</title>
      <link href="https://jaehong2.github.io//jsp-mvc" rel="alternate" type="text/html" title="MVC 패턴" />
      <published>2020-12-16T23:17:00+09:00</published>
      <updated>2020-12-16T23:17:00+09:00</updated>
      <id>https://jaehong2.github.io//jsp-mvc</id>
      <content type="html" xml:base="https://jaehong2.github.io//jsp-mvc">&lt;!-- Forwarding --&gt;

&lt;h2&gt;MVC&lt;/h2&gt;
&lt;ul&gt;
    &lt;li&gt;Model, View, Controller 약자&lt;/li&gt;
    &lt;li&gt;각각의 기능들이 상호작용&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;mvc model1&lt;/h4&gt;
&lt;p&gt;View + Controller = .jsp&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/assets/built/images/jsp/jsp.21.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h4&gt;mvc model2&lt;/h4&gt;
&lt;p&gt;모두 모듈화 되어있는 형태&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/assets/built/images/jsp/jsp.22.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h1&gt;References.&lt;/h1&gt;
&lt;ul&gt;
    &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=Aw-lOlR0I28&amp;amp;list=PLOJ3X9PwqLzvyIx3mwuf-muEd5TUI-yph/&quot; target=&quot;_blank&quot; class=&quot;tx-link&quot;&gt;
        https://www.youtube.com/watch?v=Aw-lOlR0I28&amp;amp;list=PLOJ3X9PwqLzvyIx3mwuf-muEd5TUI-yph/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content>

      
      
      
      
      

      <author>
          <name>jaehong</name>
        
        
      </author>

      

      
        <category term="java" />
      

      
        <summary type="html">MVC Model, View, Controller 약자 각각의 기능들이 상호작용 mvc model1 View + Controller = .jsp mvc model2 모두 모듈화 되어있는 형태 References. https://www.youtube.com/watch?v=Aw-lOlR0I28&amp;amp;list=PLOJ3X9PwqLzvyIx3mwuf-muEd5TUI-yph/</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">JSTL</title>
      <link href="https://jaehong2.github.io//jsp-jstl" rel="alternate" type="text/html" title="JSTL" />
      <published>2020-12-15T03:26:12+09:00</published>
      <updated>2020-12-15T03:26:12+09:00</updated>
      <id>https://jaehong2.github.io//jsp-jstl</id>
      <content type="html" xml:base="https://jaehong2.github.io//jsp-jstl">&lt;!-- JSTL --&gt;

&lt;h2&gt;개요&lt;/h2&gt;
&lt;p&gt;JSP 경우 HTML 태그와 같이 사용하므로 코드 가독성이 떨어진다.&lt;br /&gt;
이런 단점을 보완하고자 태그 라이브러리인 JSTL 등장!&lt;br /&gt;&lt;br /&gt;
Tomcat 컨테이너에 포함 되어있지 않아 별도 설치필요하다.&lt;br /&gt;
나의 경우 &lt;a href=&quot;http://archive.apache.org/dist/jakarta/taglibs/standard/binaries/&quot;&gt;링크&lt;/a&gt; 여기를 통해서&lt;br /&gt;
jakarta-taglibs-standard-1.1.2.zip을 다운하였다.&lt;/p&gt;
&lt;h2&gt;JSTL 라이브러리&lt;/h2&gt;
&lt;p&gt;JSTL에서는 5가지 라이브러리 제공&lt;/p&gt;
&lt;ul&gt;
    &lt;li&gt;Core&lt;/li&gt;
    &lt;li&gt;XML Processing&lt;/li&gt;
    &lt;li&gt;I18N formatting&lt;/li&gt;
    &lt;li&gt;SQL&lt;/li&gt;
    &lt;li&gt;Functions&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Core&lt;/h2&gt;
&lt;p&gt;기본적인 라이브러리로 출력,제어,반복문 기능들이 포함&lt;br /&gt;&lt;/p&gt;
&lt;h4&gt;페이지 지시자를 사용한 페이지 속성선언&lt;/h4&gt;
&lt;p&gt;&amp;lt;%@ taglib uri = http://java.sun.com/jsp/jstl/core prefix=”c” %&amp;gt; 보통 앞글자로 prefix정함&lt;/p&gt;

&lt;h4&gt;출력 태그&lt;/h4&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    &lt;span class=&quot;nt&quot;&gt;&amp;lt;c:out&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;value=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;출력값&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;default=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;기본값&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;escapeXml=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;true or false&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4&gt;변수 설정 태그&lt;/h4&gt;
&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    &lt;span class=&quot;nt&quot;&gt;&amp;lt;c:set&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;var=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;변수명&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;value=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;설정값&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;target=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;객체&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;property=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;값&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;scope=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;범위&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4&gt;변수 제거 태그&lt;/h4&gt;
&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    &lt;span class=&quot;nt&quot;&gt;&amp;lt;c:remove&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;var=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;변수명&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;scope=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;범위&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4&gt;예외 처리 태그&lt;/h4&gt;
&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    &lt;span class=&quot;nt&quot;&gt;&amp;lt;c:catch&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;var=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;변수명&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4&gt;제어문(if)&lt;/h4&gt;
&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    &lt;span class=&quot;nt&quot;&gt;&amp;lt;c:if&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;test=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;조건&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;var=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;조건 처리 변수명&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;scope=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;범위&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4&gt;제어문(switch)&lt;/h4&gt;
&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    &lt;span class=&quot;nt&quot;&gt;&amp;lt;c:choose&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;c:when&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;test=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;조건&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;처리내용&lt;span class=&quot;nt&quot;&gt;&amp;lt;/c:when&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;c:oherwise&amp;gt;&lt;/span&gt;처리 내용&lt;span class=&quot;nt&quot;&gt;&amp;lt;/c:oherwise&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/c:choose&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4&gt;반복문(for)문&lt;/h4&gt;
&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    &lt;span class=&quot;nt&quot;&gt;&amp;lt;c:forEach&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;itmes=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;객체명&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;begin=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;시작 인덱스&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;end=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;끝 인덱스&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;step=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;증감식&quot;&lt;/span&gt;
               &lt;span class=&quot;na&quot;&gt;var=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;변수명&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;varStatus=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;상태변수&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4&gt;페이지 이동 태그&lt;/h4&gt;
&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    &lt;span class=&quot;nt&quot;&gt;&amp;lt;c:redirect&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;url =&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;url&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4&gt;파라미터 전달 태그&lt;/h4&gt;
&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    &lt;span class=&quot;nt&quot;&gt;&amp;lt;c:param&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;파라미터명&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;value=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;값&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;h2&gt;예제&lt;/h2&gt;
&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;%@&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;page&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;language=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;java&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;contentType=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;text/html; charset=UTF-8&quot;&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;pageEncoding=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;UTF-8&quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;%@&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;taglib&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;prefix=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;c&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;uri =&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://java.sun.com/jsp/jstl/core&quot;&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;charset=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;UTF-8&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;title&amp;gt;&lt;/span&gt;Insert title here&lt;span class=&quot;nt&quot;&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;c:set&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;var=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;varName&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;value=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;varValue&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
varName : &lt;span class=&quot;nt&quot;&gt;&amp;lt;c:out&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;value =&lt;/span&gt;&lt;span class=&quot;err&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;${varName }&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;br/&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;c:remove&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;var =&lt;/span&gt;&lt;span class=&quot;err&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;varName&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
varName : &lt;span class=&quot;nt&quot;&gt;&amp;lt;c:out&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;value =&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;${varName }&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;hr/&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;c:catch&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;var =&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;error&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;%=&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/c:catch&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;br/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;c:out&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;value=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;${error}&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;hr/&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;c:if&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;test=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;${1+2==3}&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    1 + 2 = 3
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/c:if&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;c:if&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;test=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;${1+2!=3}&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    1 + 2 != 3
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/c:if&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;hr/&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;c:forEach&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;var=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;fEach&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;begin=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;0&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;end=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;30&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;step=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;3&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    ${fEach}
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/c:forEach&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1&gt;References.&lt;/h1&gt;
&lt;ul&gt;
    &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=Aw-lOlR0I28&amp;amp;list=PLOJ3X9PwqLzvyIx3mwuf-muEd5TUI-yph/&quot; target=&quot;_blank&quot; class=&quot;tx-link&quot;&gt;
        https://www.youtube.com/watch?v=Aw-lOlR0I28&amp;amp;list=PLOJ3X9PwqLzvyIx3mwuf-muEd5TUI-yph/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content>

      
      
      
      
      

      <author>
          <name>jaehong</name>
        
        
      </author>

      

      
        <category term="java" />
      

      
        <summary type="html">개요 JSP 경우 HTML 태그와 같이 사용하므로 코드 가독성이 떨어진다. 이런 단점을 보완하고자 태그 라이브러리인 JSTL 등장! Tomcat 컨테이너에 포함 되어있지 않아 별도 설치필요하다. 나의 경우 링크 여기를 통해서 jakarta-taglibs-standard-1.1.2.zip을 다운하였다. JSTL 라이브러리 JSTL에서는 5가지 라이브러리 제공 Core XML Processing I18N formatting SQL Functions Core 기본적인 라이브러리로 출력,제어,반복문 기능들이 포함 페이지 지시자를 사용한 페이지 속성선언 &amp;lt;%@ taglib uri = http://java.sun.com/jsp/jstl/core prefix=”c” %&amp;gt; 보통 앞글자로 prefix정함 출력 태그 &amp;lt;c:out value=&quot;출력값&quot; default=&quot;기본값&quot; escapeXml=&quot;true or false&quot;/&amp;gt; 변수 설정 태그 &amp;lt;c:set var=&quot;변수명&quot; value=&quot;설정값&quot; target=&quot;객체&quot; property=&quot;값&quot; scope=&quot;범위&quot;/&amp;gt; 변수 제거 태그 &amp;lt;c:remove var=&quot;변수명&quot; scope=&quot;범위&quot;/&amp;gt; 예외 처리 태그 &amp;lt;c:catch var=&quot;변수명&quot;/&amp;gt; 제어문(if) &amp;lt;c:if test=&quot;조건&quot; var=&quot;조건 처리 변수명&quot; scope=&quot;범위&quot;/&amp;gt; 제어문(switch) &amp;lt;c:choose&amp;gt; &amp;lt;c:when test=&quot;조건&quot;&amp;gt;처리내용&amp;lt;/c:when&amp;gt; &amp;lt;c:oherwise&amp;gt;처리 내용&amp;lt;/c:oherwise&amp;gt; &amp;lt;/c:choose&amp;gt; 반복문(for)문 &amp;lt;c:forEach itmes=&quot;객체명&quot; begin=&quot;시작 인덱스&quot; end=&quot;끝 인덱스&quot; step=&quot;증감식&quot; var=&quot;변수명&quot; varStatus=&quot;상태변수&quot;/&amp;gt; 페이지 이동 태그 &amp;lt;c:redirect url =&quot;url&quot;/&amp;gt; 파라미터 전달 태그 &amp;lt;c:param name=&quot;파라미터명&quot; value=&quot;값&quot;/&amp;gt; 예제 &amp;lt;%@ page language=&quot;java&quot; contentType=&quot;text/html; charset=UTF-8&quot; pageEncoding=&quot;UTF-8&quot;%&amp;gt; &amp;lt;%@ taglib prefix=&quot;c&quot; uri =&quot;http://java.sun.com/jsp/jstl/core&quot; %&amp;gt; &amp;lt;!DOCTYPE html&amp;gt; &amp;lt;html&amp;gt; &amp;lt;head&amp;gt; &amp;lt;meta charset=&quot;UTF-8&quot;&amp;gt; &amp;lt;title&amp;gt;Insert title here&amp;lt;/title&amp;gt; &amp;lt;/head&amp;gt; &amp;lt;body&amp;gt; &amp;lt;c:set var=&quot;varName&quot; value=&quot;varValue&quot;/&amp;gt; varName : &amp;lt;c:out value = &quot;${varName }&quot;/&amp;gt; &amp;lt;br/&amp;gt; &amp;lt;c:remove var = &quot;varName&quot;/&amp;gt; varName : &amp;lt;c:out value =&quot;${varName }&quot;/&amp;gt; &amp;lt;hr/&amp;gt; &amp;lt;c:catch var =&quot;error&quot;&amp;gt; &amp;lt;%=2/0 %&amp;gt; &amp;lt;/c:catch&amp;gt; &amp;lt;br/&amp;gt; &amp;lt;c:out value=&quot;${error}&quot;/&amp;gt; &amp;lt;hr/&amp;gt; &amp;lt;c:if test=&quot;${1+2==3}&quot;&amp;gt; 1 + 2 = 3 &amp;lt;/c:if&amp;gt; &amp;lt;c:if test=&quot;${1+2!=3}&quot;&amp;gt; 1 + 2 != 3 &amp;lt;/c:if&amp;gt; &amp;lt;hr/&amp;gt; &amp;lt;c:forEach var=&quot;fEach&quot; begin=&quot;0&quot; end=&quot;30&quot; step=&quot;3&quot;&amp;gt; ${fEach} &amp;lt;/c:forEach&amp;gt; &amp;lt;/body&amp;gt; &amp;lt;/html&amp;gt; References. https://www.youtube.com/watch?v=Aw-lOlR0I28&amp;amp;list=PLOJ3X9PwqLzvyIx3mwuf-muEd5TUI-yph/</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">EL(Expression Language)</title>
      <link href="https://jaehong2.github.io//jsp-el.html" rel="alternate" type="text/html" title="EL(Expression Language)" />
      <published>2020-12-14T23:44:20+09:00</published>
      <updated>2020-12-14T23:44:20+09:00</updated>
      <id>https://jaehong2.github.io//jsp-el.html</id>
      <content type="html" xml:base="https://jaehong2.github.io//jsp-el.html">&lt;!-- EL 표기법 --&gt;

&lt;h2&gt;Expression Language&lt;/h2&gt;
&lt;ul&gt;
    &lt;li&gt;&lt;mark&gt;표현식&lt;/mark&gt; 또는 &lt;mark&gt;액션 태그&lt;/mark&gt;를 대신해서 값을 표현하는 언어&lt;/li&gt;
    &lt;li&gt;&lt;mark&gt;코드의 간결화&lt;/mark&gt;를 위해 사용&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/built/images/jsp/jsp.15.JPG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-jsp&quot;&gt;표현식
${1+2}&amp;lt;br/&amp;gt;
${1-2}&amp;lt;br/&amp;gt;
${(1&amp;gt;2) ? 1 : 2 }&amp;lt;br/&amp;gt;

&amp;lt;br/&amp;gt;
&amp;lt;%= 1+2 %&amp;gt;&amp;lt;br/&amp;gt;
&amp;lt;%= 1-2 %&amp;gt;&amp;lt;br/&amp;gt;
&amp;lt;%= (1&amp;gt;2) ? 1 : 2 %&amp;gt;
======================================================
태그
이름 :   &amp;lt;jsp:getProperty name=&quot;member&quot; property=&quot;name&quot; /&amp;gt;
아이디 : &amp;lt;jsp:getProperty name=&quot;member&quot; property=&quot;id&quot; /&amp;gt;
비번:   &amp;lt;jsp:getProperty name=&quot;member&quot; property=&quot;pw&quot; /&amp;gt;

&amp;lt;br/&amp;gt;
이름 :   ${member.name }
아이디 : ${member.id }
비번:   ${member.pw }
&lt;/code&gt;&lt;/pre&gt;

&lt;hr /&gt;

&lt;h2&gt;내장객체&lt;/h2&gt;
&lt;ul&gt;
    &lt;li&gt;pageScope : page 객체를 참조하는 객체&lt;/li&gt;
    &lt;li&gt;requestScope : request 객체를 참조하는 객체&lt;/li&gt;
    &lt;li&gt;sessionScope : session 객체를 참조하는 객체&lt;/li&gt;
    &lt;li&gt;applicationScope : application 객체를 참조하는 객체&lt;/li&gt;
&lt;/ul&gt;

&lt;ul&gt;
    &lt;li&gt;param : 요청 파라미터를 참조하는 객체&lt;/li&gt;
    &lt;li&gt;paramValues : 요청 파라미터(배열)을 참조하는 객체&lt;/li&gt;
    &lt;li&gt;initParam 초기화 파라미터를 참조하는 객체&lt;/li&gt;
    &lt;li&gt;cookie : cookie 객체를 참조하는 객체&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h2&gt;예제1&lt;/h2&gt;
&lt;h4&gt;입력 폼&lt;/h4&gt;
&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;form&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;action=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;objelOk.jsp&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    아이디 : &lt;span class=&quot;nt&quot;&gt;&amp;lt;input&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;text&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name =&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;id&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    비밀번호 : &lt;span class=&quot;nt&quot;&gt;&amp;lt;input&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;password&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name =&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;pw&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;input&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;submit&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;value=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;login&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/form&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4&gt;출력 폼&lt;/h4&gt;
&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;%&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id =&lt;/span&gt;&lt;span class=&quot;err&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;request.getParameter(&quot;id&quot;);&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;pw =&lt;/span&gt;&lt;span class=&quot;err&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;request.getParameter(&quot;pw&quot;);&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;

아이디 &lt;span class=&quot;nt&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;%=&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;br/&amp;gt;&lt;/span&gt;
비번 &lt;span class=&quot;nt&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;%=&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;pw&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;hr/&amp;gt;&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;&amp;lt;!-- 내장객체 param사용 --&amp;gt;&lt;/span&gt;
아이디 ${param.id }&lt;span class=&quot;nt&quot;&gt;&amp;lt;br/&amp;gt;&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- request.getParameter(&quot;id&quot;);과 동일 --&amp;gt;&lt;/span&gt;
비밀번호 ${param.pw }&lt;span class=&quot;nt&quot;&gt;&amp;lt;br/&amp;gt;&lt;/span&gt;

아이디 ${param[&quot;id&quot;]}&lt;span class=&quot;nt&quot;&gt;&amp;lt;br/&amp;gt;&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- request.getParameter(&quot;id&quot;);과 동일 --&amp;gt;&lt;/span&gt;
비밀번호 ${param[&quot;pw&quot;]}&lt;span class=&quot;nt&quot;&gt;&amp;lt;br/&amp;gt;&lt;/span&gt;

=======================
&lt;span class=&quot;c&quot;&gt;&amp;lt;!--내장 객체--&amp;gt;&lt;/span&gt;
applicationScope : ${applicationScope.application_name }&lt;span class=&quot;nt&quot;&gt;&amp;lt;br/&amp;gt;&lt;/span&gt;
sessionScope : ${sessionScope.session_name }&lt;span class=&quot;nt&quot;&gt;&amp;lt;br/&amp;gt;&lt;/span&gt;
pageScope : ${pageScope.page_name }&lt;span class=&quot;nt&quot;&gt;&amp;lt;br/&amp;gt;&lt;/span&gt;
requestScope : ${requestScope.request_name }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;hr /&gt;

&lt;h2&gt;예제2&lt;/h2&gt;
&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;&amp;lt;!-- web.xml파일에서 context-param에 등록된 데이터를 들고 올때--&amp;gt;&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;&amp;lt;!-- 8-2에서 배운 ServletContext --&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;%&lt;/span&gt;  &lt;span class=&quot;na&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id =&lt;/span&gt;&lt;span class=&quot;err&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;getServletContext().getInitParameter(&quot;con_name&quot;);&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;pw =&lt;/span&gt;&lt;span class=&quot;err&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;getServletContext().getInitParameter(&quot;con_id&quot;);&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;path =&lt;/span&gt;&lt;span class=&quot;err&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;getServletContext().getInitParameter(&quot;con_pw&quot;);&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;%=&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;br/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;%=&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;pw&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;br/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;%=&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;path&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;br/&amp;gt;&lt;/span&gt;
============================
&lt;span class=&quot;c&quot;&gt;&amp;lt;!-- EL을 사용해서 가지고올때 --&amp;gt;&lt;/span&gt;
${initParam.con_name }&lt;span class=&quot;nt&quot;&gt;&amp;lt;br/&amp;gt;&lt;/span&gt;
${initParam.con_id }&lt;span class=&quot;nt&quot;&gt;&amp;lt;br/&amp;gt;&lt;/span&gt;
${initParam.con_pw }&lt;span class=&quot;nt&quot;&gt;&amp;lt;br/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1&gt;References.&lt;/h1&gt;
&lt;ul&gt;
    &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=Aw-lOlR0I28&amp;amp;list=PLOJ3X9PwqLzvyIx3mwuf-muEd5TUI-yph/&quot; target=&quot;_blank&quot; class=&quot;tx-link&quot;&gt;
        https://www.youtube.com/watch?v=Aw-lOlR0I28&amp;amp;list=PLOJ3X9PwqLzvyIx3mwuf-muEd5TUI-yph/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content>

      
      
      
      
      

      <author>
          <name>jaehong</name>
        
        
      </author>

      

      
        <category term="java" />
      

      
        <summary type="html">Expression Language 표현식 또는 액션 태그를 대신해서 값을 표현하는 언어 코드의 간결화를 위해 사용 표현식 ${1+2}&amp;lt;br/&amp;gt; ${1-2}&amp;lt;br/&amp;gt; ${(1&amp;gt;2) ? 1 : 2 }&amp;lt;br/&amp;gt; &amp;lt;br/&amp;gt; &amp;lt;%= 1+2 %&amp;gt;&amp;lt;br/&amp;gt; &amp;lt;%= 1-2 %&amp;gt;&amp;lt;br/&amp;gt; &amp;lt;%= (1&amp;gt;2) ? 1 : 2 %&amp;gt; ====================================================== 태그 이름 : &amp;lt;jsp:getProperty name=&quot;member&quot; property=&quot;name&quot; /&amp;gt; 아이디 : &amp;lt;jsp:getProperty name=&quot;member&quot; property=&quot;id&quot; /&amp;gt; 비번: &amp;lt;jsp:getProperty name=&quot;member&quot; property=&quot;pw&quot; /&amp;gt; &amp;lt;br/&amp;gt; 이름 : ${member.name } 아이디 : ${member.id } 비번: ${member.pw } 내장객체 pageScope : page 객체를 참조하는 객체 requestScope : request 객체를 참조하는 객체 sessionScope : session 객체를 참조하는 객체 applicationScope : application 객체를 참조하는 객체 param : 요청 파라미터를 참조하는 객체 paramValues : 요청 파라미터(배열)을 참조하는 객체 initParam 초기화 파라미터를 참조하는 객체 cookie : cookie 객체를 참조하는 객체 예제1 입력 폼 &amp;lt;form action=&quot;objelOk.jsp&quot;&amp;gt; 아이디 : &amp;lt;input type=&quot;text&quot; name =&quot;id&quot;&amp;gt; 비밀번호 : &amp;lt;input type=&quot;password&quot; name =&quot;pw&quot;&amp;gt; &amp;lt;input type=&quot;submit&quot; value=&quot;login&quot;&amp;gt; &amp;lt;/form&amp;gt; 출력 폼 &amp;lt;% String id = request.getParameter(&quot;id&quot;); String pw = request.getParameter(&quot;pw&quot;); %&amp;gt; 아이디 &amp;lt;%= id %&amp;gt;&amp;lt;br/&amp;gt; 비번 &amp;lt;%= pw %&amp;gt; &amp;lt;hr/&amp;gt; &amp;lt;!-- 내장객체 param사용 --&amp;gt; 아이디 ${param.id }&amp;lt;br/&amp;gt; &amp;lt;!-- request.getParameter(&quot;id&quot;);과 동일 --&amp;gt; 비밀번호 ${param.pw }&amp;lt;br/&amp;gt; 아이디 ${param[&quot;id&quot;]}&amp;lt;br/&amp;gt; &amp;lt;!-- request.getParameter(&quot;id&quot;);과 동일 --&amp;gt; 비밀번호 ${param[&quot;pw&quot;]}&amp;lt;br/&amp;gt; ======================= &amp;lt;!--내장 객체--&amp;gt; applicationScope : ${applicationScope.application_name }&amp;lt;br/&amp;gt; sessionScope : ${sessionScope.session_name }&amp;lt;br/&amp;gt; pageScope : ${pageScope.page_name }&amp;lt;br/&amp;gt; requestScope : ${requestScope.request_name } 예제2 &amp;lt;!-- web.xml파일에서 context-param에 등록된 데이터를 들고 올때--&amp;gt; &amp;lt;!-- 8-2에서 배운 ServletContext --&amp;gt; &amp;lt;% String id = getServletContext().getInitParameter(&quot;con_name&quot;); String pw = getServletContext().getInitParameter(&quot;con_id&quot;); String path = getServletContext().getInitParameter(&quot;con_pw&quot;); %&amp;gt; &amp;lt;%= id %&amp;gt;&amp;lt;br/&amp;gt; &amp;lt;%= pw %&amp;gt;&amp;lt;br/&amp;gt; &amp;lt;%= path %&amp;gt;&amp;lt;br/&amp;gt; ============================ &amp;lt;!-- EL을 사용해서 가지고올때 --&amp;gt; ${initParam.con_name }&amp;lt;br/&amp;gt; ${initParam.con_id }&amp;lt;br/&amp;gt; ${initParam.con_pw }&amp;lt;br/&amp;gt; References. https://www.youtube.com/watch?v=Aw-lOlR0I28&amp;amp;list=PLOJ3X9PwqLzvyIx3mwuf-muEd5TUI-yph/</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">file upload</title>
      <link href="https://jaehong2.github.io//jsp-file-upload.html" rel="alternate" type="text/html" title="file upload" />
      <published>2020-12-13T20:32:20+09:00</published>
      <updated>2020-12-13T20:32:20+09:00</updated>
      <id>https://jaehong2.github.io//jsp-file-upload.html</id>
      <content type="html" xml:base="https://jaehong2.github.io//jsp-file-upload.html">&lt;!--File upload --&gt;

&lt;h2&gt;fileForm.jsp&lt;/h2&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;form&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;action =&lt;/span&gt;&lt;span class=&quot;err&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;fileFormOk.jsp&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;method=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;post&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;enctype=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;multipart/form-data&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    파일 : &lt;span class=&quot;nt&quot;&gt;&amp;lt;input&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;file&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;file&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;br/&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;input&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;submit&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;value=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;File Upload&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/form&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
    &lt;li&gt;&amp;lt;input type=&quot;file&quot;&amp;gt; : 파일을 선택할 수 있는 창을 만든다.&lt;/li&gt;
    &lt;li&gt;&amp;lt;form method=&quot;post&quot;&amp;gt; : 형태로 전송한 폼에 담겨진 파라미터들은&lt;br /&gt; request 객체를 통해 이름에 해당되는 값을 얻어낼 수 있다 .&lt;/li&gt;
    &lt;li&gt;하지만 enctype=&quot;multipart/form-data&quot;로 지정한 폼은 &lt;br /&gt;request객체로 파라미터의 값을 얻어낼 수 없다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;multipart/form-data 전송한 양식의 파라미터들에 대한 값을 얻어내기 위해&lt;br /&gt;
특별한 컴포넌트가 필요하다!&lt;br /&gt;
&lt;a href=&quot;http://www.servlets.com/cos/&quot;&gt;http://www.servlets.com/cos/&lt;/a&gt;&lt;br /&gt;
여기서 cos 파일을 다운 받아 cos/lib/cos.jar 파일을 &lt;b&gt;WebContent/WEB-INF/lib&lt;/b&gt;에 복사한다.&lt;/p&gt;

&lt;h2&gt;fileFormOk.jsp&lt;/h2&gt;
&lt;p&gt;실질적인 업로드가 진행되는 jsp 파일&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;%@&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;page&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;import=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;java.util.Enumeration&quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;%@&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;page&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;import=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;com.oreilly.servlet.MultipartRequest&quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;%@&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;page&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;import=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;com.oreilly.servlet.multipart.DefaultFileRenamePolicy&quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;%@&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;page&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;language=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;java&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;contentType=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;text/html; charset=UTF-8&quot;&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;pageEncoding=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;UTF-8&quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;%&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;path  =&lt;/span&gt;&lt;span class=&quot;err&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;request.getRealPath(&quot;fileFolder&quot;);&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;//파일이&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;실제로&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;저장되는&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;폴더명&lt;/span&gt;

    &lt;span class=&quot;na&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;size =&lt;/span&gt;&lt;span class=&quot;err&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;1024&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;1024&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;//&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;10M&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;file=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;oriFile =&lt;/span&gt;&lt;span class=&quot;err&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;na&quot;&gt;try&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;err&quot;&gt;//&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;MultipartRequest&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;객체가&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;파일&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;업로드를&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;담당&lt;/span&gt;
        &lt;span class=&quot;err&quot;&gt;//&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;form&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;에서&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;가져온&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;인자값을&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;얻기위해&lt;/span&gt;
        &lt;span class=&quot;err&quot;&gt;//업로드될&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;위치&lt;/span&gt;
        &lt;span class=&quot;err&quot;&gt;//업로드&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;최대크기&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;설정&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;초과할경우&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;exception&lt;/span&gt;
        &lt;span class=&quot;err&quot;&gt;//한글&lt;/span&gt;
        &lt;span class=&quot;err&quot;&gt;//이름이&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;같은&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;파일을&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;업로드할경우&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;파일이름&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;변환&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;MultipartRequest&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;multi =&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;MultipartRequest&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;utf-8&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&quot;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;DefaultFileRenamePolicy&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;());&lt;/span&gt;

        &lt;span class=&quot;na&quot;&gt;Enumeration&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;files =&lt;/span&gt;&lt;span class=&quot;err&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;multi.getFileNames();&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;//올린파일이름들을&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;얻는다.&lt;/span&gt;

        &lt;span class=&quot;na&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;str =&lt;/span&gt;&lt;span class=&quot;err&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;(String)files.nextElement();//파일이름&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;저장&lt;/span&gt;


        &lt;span class=&quot;na&quot;&gt;file =&lt;/span&gt;&lt;span class=&quot;err&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;multi.getFilesystemName(str);&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;//파일이름이&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;중복되어있을때&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;처리&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;oriFile =&lt;/span&gt;&lt;span class=&quot;err&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;multi.getOriginalFileName(str);&lt;/span&gt;

    &lt;span class=&quot;err&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;catch&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;Exception&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;){&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;printStackTrace&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;err&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;charset=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;UTF-8&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;title&amp;gt;&lt;/span&gt;Insert title here&lt;span class=&quot;nt&quot;&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
file upload success;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1&gt;References.&lt;/h1&gt;
&lt;ul&gt;
    &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=Aw-lOlR0I28&amp;amp;list=PLOJ3X9PwqLzvyIx3mwuf-muEd5TUI-yph/&quot; target=&quot;_blank&quot; class=&quot;tx-link&quot;&gt;
        https://www.youtube.com/watch?v=Aw-lOlR0I28&amp;amp;list=PLOJ3X9PwqLzvyIx3mwuf-muEd5TUI-yph/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content>

      
      
      
      
      

      <author>
          <name>jaehong</name>
        
        
      </author>

      

      
        <category term="java" />
      

      
        <summary type="html">fileForm.jsp &amp;lt;form action = &quot;fileFormOk.jsp&quot; method=&quot;post&quot; enctype=&quot;multipart/form-data&quot;&amp;gt; 파일 : &amp;lt;input type=&quot;file&quot; name=&quot;file&quot;&amp;gt;&amp;lt;br/&amp;gt; &amp;lt;input type=&quot;submit&quot; value=&quot;File Upload&quot;&amp;gt; &amp;lt;/form&amp;gt; &amp;lt;input type=&quot;file&quot;&amp;gt; : 파일을 선택할 수 있는 창을 만든다. &amp;lt;form method=&quot;post&quot;&amp;gt; : 형태로 전송한 폼에 담겨진 파라미터들은 request 객체를 통해 이름에 해당되는 값을 얻어낼 수 있다 . 하지만 enctype=&quot;multipart/form-data&quot;로 지정한 폼은 request객체로 파라미터의 값을 얻어낼 수 없다. multipart/form-data 전송한 양식의 파라미터들에 대한 값을 얻어내기 위해 특별한 컴포넌트가 필요하다! http://www.servlets.com/cos/ 여기서 cos 파일을 다운 받아 cos/lib/cos.jar 파일을 WebContent/WEB-INF/lib에 복사한다. fileFormOk.jsp 실질적인 업로드가 진행되는 jsp 파일 &amp;lt;%@page import=&quot;java.util.Enumeration&quot;%&amp;gt; &amp;lt;%@page import=&quot;com.oreilly.servlet.MultipartRequest&quot;%&amp;gt; &amp;lt;%@page import=&quot;com.oreilly.servlet.multipart.DefaultFileRenamePolicy&quot;%&amp;gt; &amp;lt;%@ page language=&quot;java&quot; contentType=&quot;text/html; charset=UTF-8&quot; pageEncoding=&quot;UTF-8&quot;%&amp;gt; &amp;lt;% String path = request.getRealPath(&quot;fileFolder&quot;); //파일이 실제로 저장되는 폴더명 int size = 1024 * 1024 * 10; //10M String file=&quot;&quot;; String oriFile = &quot;&quot;; try{ //MultipartRequest객체가 파일 업로드를 담당 //form에서 가져온 인자값을 얻기위해 //업로드될 위치 //업로드 최대크기 설정 초과할경우 exception //한글 //이름이 같은 파일을 업로드할경우 파일이름 변환 MultipartRequest multi = new MultipartRequest(request, path, size, &quot;utf-8&quot;, new DefaultFileRenamePolicy()); Enumeration files = multi.getFileNames(); //올린파일이름들을 얻는다. String str = (String)files.nextElement();//파일이름 저장 file = multi.getFilesystemName(str); //파일이름이 중복되어있을때 처리 oriFile = multi.getOriginalFileName(str); }catch(Exception e){ e.printStackTrace(); } %&amp;gt; &amp;lt;!DOCTYPE html&amp;gt; &amp;lt;html&amp;gt; &amp;lt;head&amp;gt; &amp;lt;meta charset=&quot;UTF-8&quot;&amp;gt; &amp;lt;title&amp;gt;Insert title here&amp;lt;/title&amp;gt; &amp;lt;/head&amp;gt; &amp;lt;body&amp;gt; file upload success; &amp;lt;/body&amp;gt; &amp;lt;/html&amp;gt; References. https://www.youtube.com/watch?v=Aw-lOlR0I28&amp;amp;list=PLOJ3X9PwqLzvyIx3mwuf-muEd5TUI-yph/</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">회원 CRUD</title>
      <link href="https://jaehong2.github.io//jsp-member-crud.html" rel="alternate" type="text/html" title="회원 CRUD" />
      <published>2020-12-11T19:46:30+09:00</published>
      <updated>2020-12-11T19:46:30+09:00</updated>
      <id>https://jaehong2.github.io//jsp-member-crud.html</id>
      <content type="html" xml:base="https://jaehong2.github.io//jsp-member-crud.html">&lt;h2&gt;흐름도&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;assets/built/images/jsp/jsp.14.JPG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2&gt;MemberDao.java&lt;/h2&gt;
&lt;script src=&quot;https://gist.github.com/jaehong2/7f3b178b20ede0278e3a3941f1b07428.js&quot;&gt;&lt;/script&gt;

&lt;h2&gt;login.jsp&lt;/h2&gt;
&lt;script src=&quot;https://gist.github.com/jaehong2/a3e92eb5c59a4d61852f6b39b5628021.js&quot;&gt;&lt;/script&gt;

&lt;h2&gt;loginOk.jsp&lt;/h2&gt;
&lt;script src=&quot;https://gist.github.com/jaehong2/2355bb2bb47ff4f832d12949c721e441.js&quot;&gt;&lt;/script&gt;

&lt;h2&gt;join.jsp&lt;/h2&gt;
&lt;script src=&quot;https://gist.github.com/jaehong2/9af420cb94aea92f47d412e9239166a0.js&quot;&gt;&lt;/script&gt;

&lt;h2&gt;joinOk.jsp&lt;/h2&gt;
&lt;script src=&quot;https://gist.github.com/jaehong2/94ae0ee9467e9a1c75f368afc4163c85.js&quot;&gt;&lt;/script&gt;

&lt;h2&gt;main.jsp&lt;/h2&gt;
&lt;script src=&quot;https://gist.github.com/jaehong2/229c24e70da2dfd7dd89919b233fc077.js&quot;&gt;&lt;/script&gt;

&lt;h2&gt;modify.jsp&lt;/h2&gt;
&lt;script src=&quot;https://gist.github.com/jaehong2/3bf6f14fa953eedded9b80b4035b0518.js&quot;&gt;&lt;/script&gt;

&lt;h2&gt;modifyOk.jsp&lt;/h2&gt;
&lt;script src=&quot;https://gist.github.com/jaehong2/4719e895c45ce3548bf39ce284b3d184.js&quot;&gt;&lt;/script&gt;

&lt;h2&gt;logout.jsp&lt;/h2&gt;
&lt;script src=&quot;https://gist.github.com/jaehong2/051f4bdb333a157933993f679dc10c9d.js&quot;&gt;&lt;/script&gt;

&lt;h2&gt;member.js&lt;/h2&gt;
&lt;script src=&quot;https://gist.github.com/jaehong2/86fef884bee2c818130b978d6ed31d3e.js&quot;&gt;&lt;/script&gt;

&lt;h1&gt;References.&lt;/h1&gt;
&lt;ul&gt;
    &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=Aw-lOlR0I28&amp;amp;list=PLOJ3X9PwqLzvyIx3mwuf-muEd5TUI-yph/&quot; target=&quot;_blank&quot; class=&quot;tx-link&quot;&gt;
        https://www.youtube.com/watch?v=Aw-lOlR0I28&amp;amp;list=PLOJ3X9PwqLzvyIx3mwuf-muEd5TUI-yph/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content>

      
      
      
      
      

      <author>
          <name>jaehong</name>
        
        
      </author>

      

      
        <category term="java" />
      

      
        <summary type="html">흐름도 MemberDao.java login.jsp loginOk.jsp join.jsp joinOk.jsp main.jsp modify.jsp modifyOk.jsp logout.jsp member.js References. https://www.youtube.com/watch?v=Aw-lOlR0I28&amp;amp;list=PLOJ3X9PwqLzvyIx3mwuf-muEd5TUI-yph/</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">한수</title>
      <link href="https://jaehong2.github.io//beakjoon-1065" rel="alternate" type="text/html" title="한수" />
      <published>2020-12-08T08:49:55+09:00</published>
      <updated>2020-12-08T08:49:55+09:00</updated>
      <id>https://jaehong2.github.io//beakjoon-1065</id>
      <content type="html" xml:base="https://jaehong2.github.io//beakjoon-1065">&lt;h2&gt;한수&lt;/h2&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;문제&lt;/p&gt;

&lt;p&gt;어떤 양의 정수 X의 각 자리가 등차수열을 이룬다면, 그 수를 한수라고 한다. 등차수열은 연속된 두 개의 수의 차이가 일정한 수열을 말한다.&lt;br /&gt;
N이 주어졌을 때, 1보다 크거나 같고, N보다 작거나 같은 한수의 개수를 출력하는 프로그램을 작성하시오.&lt;/p&gt;

&lt;p&gt;입력&lt;/p&gt;
&lt;p&gt;110&lt;/p&gt;

&lt;p&gt;출력&lt;/p&gt;
&lt;p&gt;99
&lt;br /&gt;&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;java.io.*&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Main&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[])&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IOException&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;BufferedReader&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;br&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BufferedReader&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;InputStreamReader&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;in&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;BufferedWriter&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bw&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BufferedWriter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;OutputStreamWriter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;

    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Integer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;parseInt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;br&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;readLine&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;bw&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;check&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;\n&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;bw&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;flush&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;br&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;close&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;bw&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;close&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;check&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;count&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//정해진입력값에서 한수가 몇개인지&lt;/span&gt;
        &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;];&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//100~ 999자리수를 저장하기위한 배열&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;//  1~ 입력만큼&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;count&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//1~99는 모두 한수&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1000&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//1000은 한수가 아님&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;k&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//일의자리수를 배열에 넣기위한 로직&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++;&lt;/span&gt;
            &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//공차가 같으면 한수&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++;&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;처음에는 문제 이해를 못하였는데 입력값으로 주어진 수 만큼 예를 들어 110이면 1~110만큼 수 중에&lt;br /&gt;
    한수 즉 123 같이 각 자리의 수만봤을때 1 2 3 이 1씩증가되있으므로 등차수열에 성립이 된다하여&lt;br /&gt;
    123은 한수에 포함이 된다.
&lt;/p&gt;

&lt;h1&gt;문제출처&lt;/h1&gt;
&lt;ul&gt;
    &lt;li&gt;&lt;a href=&quot;https://www.acmicpc.net/problem/1065&quot;&gt;백준알고리즘 https://www.acmicpc.net/problem/1065&amp;gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content>

      
      
      
      
      

      <author>
          <name>jaehong</name>
        
        
      </author>

      

      
        <category term="algorithm" />
      

      
        <summary type="html">한수 문제 어떤 양의 정수 X의 각 자리가 등차수열을 이룬다면, 그 수를 한수라고 한다. 등차수열은 연속된 두 개의 수의 차이가 일정한 수열을 말한다. N이 주어졌을 때, 1보다 크거나 같고, N보다 작거나 같은 한수의 개수를 출력하는 프로그램을 작성하시오. 입력 110 출력 99 import java.io.*; public class Main { public static void main(String args[]) throws IOException { BufferedReader br = new BufferedReader(new InputStreamReader(System.in)); BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out)); int n = Integer.parseInt(br.readLine()); bw.write(check(n) + &quot;\n&quot;); bw.flush(); br.close(); bw.close(); } static int check(int n) { int count =0; //정해진입력값에서 한수가 몇개인지 int a[] = new int[3]; //100~ 999자리수를 저장하기위한 배열 for(int i=1; i&amp;lt;=n; i++) {// 1~ 입력만큼 if(i &amp;lt; 100 ) count = i; //1~99는 모두 한수 else if(i == 1000) break; //1000은 한수가 아님 else { int k = 0, t = i; while (t &amp;gt; 0) { //일의자리수를 배열에 넣기위한 로직 a[k] = t % 10; t /= 10; k++; } if (a[0] - a[1] == a[1] - a[2]) //공차가 같으면 한수 count++; } } return count; } } 처음에는 문제 이해를 못하였는데 입력값으로 주어진 수 만큼 예를 들어 110이면 1~110만큼 수 중에 한수 즉 123 같이 각 자리의 수만봤을때 1 2 3 이 1씩증가되있으므로 등차수열에 성립이 된다하여 123은 한수에 포함이 된다. 문제출처 백준알고리즘 https://www.acmicpc.net/problem/1065&amp;gt;</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">dbcp</title>
      <link href="https://jaehong2.github.io//jsp-dbcp.html" rel="alternate" type="text/html" title="dbcp" />
      <published>2020-12-06T05:11:23+09:00</published>
      <updated>2020-12-06T05:11:23+09:00</updated>
      <id>https://jaehong2.github.io//jsp-dbcp.html</id>
      <content type="html" xml:base="https://jaehong2.github.io//jsp-dbcp.html">&lt;h1&gt;커넥션 풀&lt;/h1&gt;

&lt;h2&gt;DAO, DTO&lt;/h2&gt;
&lt;p&gt;DAO: Data Access Object -&amp;gt; DB로 접근해서 로직수행&lt;/p&gt;
&lt;p&gt;DTO: Data Transfer Object -&amp;gt; DAO를 이용하여 일반적인 변수에 데이터를 할당하여 사용할수도있지만.&lt;br /&gt; 그럴경우 코드가 지저분해진다.
                                그래서 데이터만을 모아둔 클래스를 별도로 정의한것을 DTO&lt;/p&gt;

&lt;h2&gt;PreparedStatement&lt;/h2&gt;
&lt;p&gt;sql문 실행을 위해 Statement 객체를 이용했는데, 중복코드가 많아진다는 단점이있어&lt;br /&gt;
   단점 보안을 위해 PreparedStatement 등장&lt;/p&gt;

&lt;h2&gt;커넥션 풀(DBCP)&lt;/h2&gt;
&lt;ul&gt;
    &lt;li&gt;DB 부하를 막기위해 Connection 객체를 미리 생성하여 사용&lt;/li&gt;
    &lt;li&gt;tomcat 컨테이너 안 context.xml 파일에 코드 추가&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;context.xml&lt;/p&gt;
&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Resource&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;auth&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Container&quot;&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;driverClassName&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;oracle.jdbc.driver.OracleDriver&quot;&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;jdbc:oracle:thin:@localhost:1521:orcl&quot;&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;username&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;scott&quot;&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;password&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;1234&quot;&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;jdbc/Oracle11g&quot;&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;javax.sql.DataSource&quot;&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;maxActive&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;50&quot;&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;maxWait&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;1000&quot;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;/&amp;gt;&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;/assets/built/images/jsp/jsp.13.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;
&lt;h1&gt;References.&lt;/h1&gt;
&lt;ul&gt;
    &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=Aw-lOlR0I28&amp;amp;list=PLOJ3X9PwqLzvyIx3mwuf-muEd5TUI-yph/&quot; target=&quot;_blank&quot; class=&quot;tx-link&quot;&gt;
        https://www.youtube.com/watch?v=Aw-lOlR0I28&amp;amp;list=PLOJ3X9PwqLzvyIx3mwuf-muEd5TUI-yph/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content>

      
      
      
      
      

      <author>
          <name>jaehong</name>
        
        
      </author>

      

      
        <category term="java" />
      

      
        <summary type="html">커넥션 풀 DAO, DTO DAO: Data Access Object -&amp;gt; DB로 접근해서 로직수행 DTO: Data Transfer Object -&amp;gt; DAO를 이용하여 일반적인 변수에 데이터를 할당하여 사용할수도있지만. 그럴경우 코드가 지저분해진다. 그래서 데이터만을 모아둔 클래스를 별도로 정의한것을 DTO PreparedStatement sql문 실행을 위해 Statement 객체를 이용했는데, 중복코드가 많아진다는 단점이있어 단점 보안을 위해 PreparedStatement 등장 커넥션 풀(DBCP) DB 부하를 막기위해 Connection 객체를 미리 생성하여 사용 tomcat 컨테이너 안 context.xml 파일에 코드 추가 context.xml &amp;lt;Resource auth=&quot;Container&quot; driverClassName = &quot;oracle.jdbc.driver.OracleDriver&quot; url = &quot;jdbc:oracle:thin:@localhost:1521:orcl&quot; username = &quot;scott&quot; password = &quot;1234&quot; name = &quot;jdbc/Oracle11g&quot; type = &quot;javax.sql.DataSource&quot; maxActive = &quot;50&quot; maxWait = &quot;1000&quot; /&amp;gt; References. https://www.youtube.com/watch?v=Aw-lOlR0I28&amp;amp;list=PLOJ3X9PwqLzvyIx3mwuf-muEd5TUI-yph/</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">Rest API란 무엇인가..</title>
      <link href="https://jaehong2.github.io//restapi.html" rel="alternate" type="text/html" title="Rest API란 무엇인가.." />
      <published>2020-12-06T00:12:20+09:00</published>
      <updated>2020-12-06T00:12:20+09:00</updated>
      <id>https://jaehong2.github.io//restapi.html</id>
      <content type="html" xml:base="https://jaehong2.github.io//restapi.html">&lt;h2&gt;rest api란 무엇인가.&lt;/h2&gt;

&lt;h1&gt;References.&lt;/h1&gt;
&lt;ul&gt;
    &lt;li&gt;&lt;a href=&quot;http://www.ssitcenter.com/&quot; target=&quot;_blank&quot; class=&quot;tx-link&quot;&gt;https://www.hanbit.co.kr/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content>

      
      
      
      
      

      <author>
          <name>jaehong</name>
        
        
      </author>

      

      
        <category term="etc" />
      

      
        <summary type="html">rest api란 무엇인가. References. https://www.hanbit.co.kr/</summary>
      

      
      
    </entry>
  
</feed>
